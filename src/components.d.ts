/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MatchResults } from "@stencil/router";
export namespace Components {
    interface AppEventCard {
        "title": string;
    }
    interface AppEvents {
        "range": Date[];
    }
    interface AppHome {
    }
    interface AppProfile {
        "match": MatchResults;
    }
    interface AppRoot {
    }
    interface AppTimeline {
    }
    interface AppTimelineEvents {
    }
}
declare global {
    interface HTMLAppEventCardElement extends Components.AppEventCard, HTMLStencilElement {
    }
    var HTMLAppEventCardElement: {
        prototype: HTMLAppEventCardElement;
        new (): HTMLAppEventCardElement;
    };
    interface HTMLAppEventsElement extends Components.AppEvents, HTMLStencilElement {
    }
    var HTMLAppEventsElement: {
        prototype: HTMLAppEventsElement;
        new (): HTMLAppEventsElement;
    };
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {
    }
    var HTMLAppProfileElement: {
        prototype: HTMLAppProfileElement;
        new (): HTMLAppProfileElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLAppTimelineElement extends Components.AppTimeline, HTMLStencilElement {
    }
    var HTMLAppTimelineElement: {
        prototype: HTMLAppTimelineElement;
        new (): HTMLAppTimelineElement;
    };
    interface HTMLAppTimelineEventsElement extends Components.AppTimelineEvents, HTMLStencilElement {
    }
    var HTMLAppTimelineEventsElement: {
        prototype: HTMLAppTimelineEventsElement;
        new (): HTMLAppTimelineEventsElement;
    };
    interface HTMLElementTagNameMap {
        "app-event-card": HTMLAppEventCardElement;
        "app-events": HTMLAppEventsElement;
        "app-home": HTMLAppHomeElement;
        "app-profile": HTMLAppProfileElement;
        "app-root": HTMLAppRootElement;
        "app-timeline": HTMLAppTimelineElement;
        "app-timeline-events": HTMLAppTimelineEventsElement;
    }
}
declare namespace LocalJSX {
    interface AppEventCard {
        "title"?: string;
    }
    interface AppEvents {
        "range"?: Date[];
    }
    interface AppHome {
    }
    interface AppProfile {
        "match"?: MatchResults;
    }
    interface AppRoot {
    }
    interface AppTimeline {
        "onSelectRange"?: (event: CustomEvent<Date[]>) => void;
    }
    interface AppTimelineEvents {
    }
    interface IntrinsicElements {
        "app-event-card": AppEventCard;
        "app-events": AppEvents;
        "app-home": AppHome;
        "app-profile": AppProfile;
        "app-root": AppRoot;
        "app-timeline": AppTimeline;
        "app-timeline-events": AppTimelineEvents;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-event-card": LocalJSX.AppEventCard & JSXBase.HTMLAttributes<HTMLAppEventCardElement>;
            "app-events": LocalJSX.AppEvents & JSXBase.HTMLAttributes<HTMLAppEventsElement>;
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-profile": LocalJSX.AppProfile & JSXBase.HTMLAttributes<HTMLAppProfileElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "app-timeline": LocalJSX.AppTimeline & JSXBase.HTMLAttributes<HTMLAppTimelineElement>;
            "app-timeline-events": LocalJSX.AppTimelineEvents & JSXBase.HTMLAttributes<HTMLAppTimelineEventsElement>;
        }
    }
}
